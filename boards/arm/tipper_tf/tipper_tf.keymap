/*
 * Copyright (c) 2021 weteor
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define SYM_L 1
#define NAV_L 2
#define FUN_L 3

// repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    combos {
        compatible = "zmk,combos";
        combo_slash {
            timeout-ms = <50>;
            key-positions = <0 10>;
            layers = <BAS_L >;
            bindings = <&kp SLASH>;
            };
        combo_lBracket {
            timeout-ms = <50>;
            key-positions = <1 11>;
            layers = <BAS_L >;
            bindings = <&kp LEFT_BRACKET>;
            };
        combo_lBrace {
            timeout-ms = <50>;
            key-positions = <2 12>;
            layers = <BAS_L >;
            bindings = <&kp LEFT_BRACE>;
            };
        combo_lParanthesis {
            timeout-ms = <50>;
            key-positions = <3 13>;
            layers = <BAS_L >;
            bindings = <&kp LEFT_PARENTHESIS>;
            };
        combo_equal {
            timeout-ms = <50>;
            key-positions = <4 14>;
            layers = <BAS_L >;
            bindings = <&kp EQUAL>;
            };

        combo_asterix {
            timeout-ms = <50>;
            key-positions = <5 15>;
            layers = <BAS_L >;
            bindings = <&kp ASTERISK>;
            };

        combo_rParanthesis {
            timeout-ms = <50>;
            key-positions = <6 16>;
            layers = <BAS_L >;
            bindings = <&kp RIGHT_PARENTHESIS>;
            };
        combo_rBrace {
            timeout-ms = <50>;
            key-positions = <7 17>;
            layers = <BAS_L >;
            bindings = <&kp RIGHT_BRACE>;
            };
        combo_rBracket {
            timeout-ms = <50>;
            key-positions = <8 18>;
            layers = <BAS_L >;
            bindings = <&kp RIGHT_BRACKET>;
            };
        combo_bSlash {
            timeout-ms = <50>;
            key-positions = <9 19>;
            layers = <BAS_L >;
            bindings = <&kp BACKSLASH>;
            };

        combo_tab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
            };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp BACKSPACE>;
            };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESCAPE>;
            };


        combo_bleLayer {
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&mo FUN_L>;
            };

        combo_capsWord {
            timeout-ms = <50>;
            key-positions = <22 27>;
            bindings = <&caps_word>;
            };

    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <180>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
    
// COMBOS
// vertical
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | 
// |  /  |  [  |  {  |  (  |  =  |     |  *  |  )  |  }  |  ]  |  \  |  
// |  A  |  S  |  D  |  F  |  G  |     |  H  |  J  |  K  |  L  |  '  | 
//
// others:
// Q + W - escape
// W + E - tab
// I + O - backspace
// C + , - word caps
// both inner thumbs -> Layer CFG
// both left thumbs  -> Layer BLE

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "Base";
// -------------------------------     -------------------------------
// |  Q  |  W  |  E  |  R  |  T  |  -  |  Y  |  U  |  I  |  O  |  P  | 
// |A sft|S win|D alt|F ctl|  G  |     |  H  |J ctl|K alt|L win|' sft| 
// |  Z  |  X  |  C  |  V  |  B  |  -  |  N  |  M  |  ,  |  .  |  ;  | 
// ------|    Spc    |    Nav    |     |    Sym    |    Ent    |------
//       -------------------------     -------------------------
            bindings = <
        &kp X             &kp J      &kp O         &kp V        &kp Z             &kp MINUS    &kp G        &kp C         &kp L          &kp Y         
      &am LCTRL H   &am LGUI A    &am LALT E    &as LSHFT I   &kp U             &kp D          &as RSHFT T   &am RALT R   &am RGUI N    &am RCTRL S   
       &kp K         &kp Q         &kp SQT        &kp LBKT       &kp SEMI         &kp B          &kp P        &kp W           &kp M       &kp F      
                                              &kp TAB       &lt SYM SPACE     &lt NAV RET   &lt MET BSPC
            >;
        };
    

        sym_layer {
            label = "Symbol";
// -------------------------------     -------------------------------
// |  `  |  ^  |  @  |  $  |  ~  |  -  |     |     |     |     |     | 
// |  &  |  !  |  +  |  _  |  #  |     |pg up|     |     |     |     | 
// |  |  |  ?  |  -  |  %  |     |  -  |pg dn|     |     |     |     | 
// ------|           |    CFG    |     |           |           |------
//       -------------------------     -------------------------
            bindings = <
        &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT         &kp CARET     &kp AMPS      &kp LS(N8)     &kp LPAR     &kp RPAR       
           &trans        &trans        &kp COMMA        &kp DOT     &kp FSLH            &kp KP_MULTIPLY &kp NON_US_HASH &kp LA(N5) &kp LA(N6)  &kp GRAVE      
        &trans        &trans        &kp LS(COMMA)     &kp LS(DOT)        &trans            &kp PIPE      &kp PLUS      &kp LA(N8)    &kp LA(N9)    &kp RBKT      
                                              &kp TAB       &lt SYM SPACE     &lt NAV RET   &lt MET BSPC
            >;
        };
        
        nav_layer {
            label = "Navigation";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  |     |pg dn| up  |pg up| del | 
// |     |     |     |     |     |     |home |left |down |right| end | 
// |     |     |     |     |     |  -  |     |prev | play|stop | next| 
// ------|           |           |     |    CFG    |           |------
//       -------------------------     -------------------------
            bindings = <
           &kp N1        &kp N2        &kp N3        &kp N4         &kp N5           &kp N6        &kp N7        &kp N8        &kp N9         &kp N0       
          &kp F1        &kp F2        &kp F3        &kp F4        &kp F5            &kp LEFT      &kp DOWN      &kp UP        &kp RIGHT     &trans        
            &kp F6        &kp F7        &kp F8        &kp F9        &kp F10           &kp HOME      &kp PG_DN     &kp PG_UP     &kp END       &trans        
                                                              &kp TAB       &lt SYM SPACE     &lt NAV RET   &lt MET BSPC  
            >;
        };

        function_layer {
            label = "FUN stuff";
// -------------------------------     -------------------------------
// |     |     |     |     |     |  -  | USB | BLE |     |     |BTCLR| 
// |     |     |     |     |     |     |     |     |     |     |     | 
// |     |     |     |     |     |  -  |BT_0 |BT_1 |BT_2 |BT_3 |BT_4 | 
// ------|           |           |     |           |           |------
//       -------------------------     -------------------------
            bindings = <
      &trans        &trans        &trans        &trans        &trans         &trans           &trans        &trans       &trans        &trans        
      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &kp C_PREV       &kp C_PP      &kp C_NEXT  &trans        &trans        
      &kp CAPS      &kp C_BRI_DN  &kp C_BRI_UP  &trans        &bt BT_CLR     &kp C_MUTE       &kp C_VOL_DN &kp C_VOL_UP    &trans        &trans        
                                                              &kp TAB       &lt SYM SPACE     &lt NAV RET   &lt MET BSPC  
            >;
        };
    };
};


